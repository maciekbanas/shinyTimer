[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 shinyTimer authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Maciej Banas. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Banas M (2025). shinyTimer: Countdown Timer Shiny. R package version 0.0.0.9014.","code":"@Manual{,   title = {shinyTimer: Countdown Timer for Shiny},   author = {Maciej Banas},   year = {2025},   note = {R package version 0.0.0.9014}, }"},{"path":"/index.html","id":"shinytimer-","dir":"","previous_headings":"","what":"Countdown Timer for Shiny","title":"Countdown Timer for Shiny","text":"shinyTimer allows easily integrate countdown timer Shiny UI, providing real-time updates server notification timer completes. examples make use shinyMobile framework.","code":""},{"path":"/index.html","id":"install","dir":"","previous_headings":"","what":"Install","title":"Countdown Timer for Shiny","text":"Development version:","code":"# install.packages(\"remotes\") remotes::install_github(\"maciekbanas/shinyTimer\")"},{"path":"/index.html","id":"how-it-works","dir":"","previous_headings":"","what":"How it works","title":"Countdown Timer for Shiny","text":"get things work need add UI shinyTimer() trigger action server (e.g. countDown()). Try : shinyTimer() default simple one, can switch clock types passing mm:ss, hh:mm:ss mm:ss.cs (centiseconds) type parameter.  can either set seconds, minutes hours.","code":"ui <- shinyMobile::f7Page(   shinyMobile::f7Card(     shinyTimer::shinyTimer(       inputId = \"shiny_timer\",       seconds = 10L,        type = \"simple\",        style = \"font-weight: bold; font-size: 72px; text-align:center\"     )   ) )  server <- function(input, output, session) {   shiny::observe({     shinyTimer::countDown(session, \"shiny_timer\")   }) }  shinyApp(ui, server)"},{"path":"/index.html","id":"when-timer-completes","dir":"","previous_headings":"","what":"When timer completes","title":"Countdown Timer for Shiny","text":"timer reaches 0 JavaScript sends timer_done value Shiny input. can use trigger action (see example ).","code":"ui <- shinyMobile::f7Page(   shinyMobile::f7Card(     shinyTimer::shinyTimer(       inputId = \"shiny_timer\",       seconds = 10L,        type = \"simple\",        style = \"font-weight: bold; font-size: 72px; text-align:center\"     ),     shinyMobile::f7Button(       \"start_timer\",       label = \"Start\",        size = \"large\",       rounded = TRUE,       color = \"orange\"     ) |>       htmltools::tagAppendAttributes(         style=\"font-size:20px;\"       )   ) )  server <- function(input, output, session) {   shiny::observeEvent(input$start_timer, {     shinyTimer::countDown(session, \"shiny_timer\")   })   shiny::observeEvent(input$timer_done, {     shinyMobile::f7Dialog(       id = \"dialog\",       title = \"Time's Up!\",       text = \"\"     )   }) }  shinyApp(ui, server)"},{"path":"/index.html","id":"stopwatch","dir":"","previous_headings":"","what":"Stopwatch","title":"Countdown Timer for Shiny","text":"can also use shinyTimer stopwatch. Simply trigger shinyTimer server countUp():","code":"ui <- shinyMobile::f7Page(   shinyMobile::f7Card(     shinyTimer::shinyTimer(       inputId = \"shiny_timer\",       seconds = 0L,        type = \"mm:ss.cs\",        style = \"font-weight: bold; font-size: 72px; text-align:center\"     ),     shinyMobile::f7Block(       shinyMobile::f7Button(         \"start_timer\",         label = \"Start\",          size = \"large\",         rounded = TRUE,         color = \"green\"       ) |>         htmltools::tagAppendAttributes(           style=\"font-size:20px;\"         ),       shinyMobile::f7Button(         \"stop_timer\",         label = \"Stop\",          size = \"large\",         rounded = TRUE,         color = \"orange\"       ) |>         htmltools::tagAppendAttributes(           style=\"font-size:20px;\"         )     )        ) )  server <- function(input, output, session) {   shiny::observeEvent(input$start_timer, {     shinyTimer::countUp(session, \"shiny_timer\")   })   shiny::observeEvent(input$stop_timer, {     shinyTimer::stopTimer(session, \"shiny_timer\")   }) }  shinyApp(ui, server)"},{"path":"/reference/countDown.html","id":null,"dir":"Reference","previous_headings":"","what":"Set shinyTimer in motion: count down — countDown","title":"Set shinyTimer in motion: count down — countDown","text":"Set shinyTimer motion: count ","code":""},{"path":"/reference/countDown.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set shinyTimer in motion: count down — countDown","text":"","code":"countDown(session, inputId)"},{"path":"/reference/countDown.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set shinyTimer in motion: count down — countDown","text":"session session object shiny server function. inputId input ID corresponding UI element.","code":""},{"path":"/reference/countUp.html","id":null,"dir":"Reference","previous_headings":"","what":"Set shinyTimer in motion: count up — countUp","title":"Set shinyTimer in motion: count up — countUp","text":"Set shinyTimer motion: count ","code":""},{"path":"/reference/countUp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set shinyTimer in motion: count up — countUp","text":"","code":"countUp(session, inputId)"},{"path":"/reference/countUp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set shinyTimer in motion: count up — countUp","text":"session session object shiny server function. inputId input ID corresponding UI element.","code":""},{"path":"/reference/shinyTimer.html","id":null,"dir":"Reference","previous_headings":"","what":"shinyTimer widget — shinyTimer","title":"shinyTimer widget — shinyTimer","text":"shinyTimer widget","code":""},{"path":"/reference/shinyTimer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"shinyTimer widget — shinyTimer","text":"","code":"shinyTimer(   inputId,   label = NULL,   hours = 0,   minutes = 0,   seconds = 0,   type = \"simple\",   background = \"none\",   ... )"},{"path":"/reference/shinyTimer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"shinyTimer widget — shinyTimer","text":"inputId input id. label label display countdown. hours integer, starting time hours countdown. minutes integer, starting time minutes countdown. seconds integer, starting time seconds countdown. type type countdown timer display (\"simple\", \"mm:ss\", \"hh:mm:ss\", \"mm:ss.cs\"). background shape timer's container (\"none\", \"circle\", \"rectangle\"). ... additional parameters want pass placeholder timer (htmltools::tags$div).","code":""},{"path":"/reference/shinyTimer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"shinyTimer widget — shinyTimer","text":"shiny UI component countdown timer.","code":""},{"path":"/reference/stopTimer.html","id":null,"dir":"Reference","previous_headings":"","what":"Stop shinyTimer — stopTimer","title":"Stop shinyTimer — stopTimer","text":"Stop shinyTimer","code":""},{"path":"/reference/stopTimer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stop shinyTimer — stopTimer","text":"","code":"stopTimer(session, inputId)"},{"path":"/reference/stopTimer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stop shinyTimer — stopTimer","text":"session session object shiny server function. inputId input ID corresponding UI element.","code":""},{"path":"/reference/updateShinyTimer.html","id":null,"dir":"Reference","previous_headings":"","what":"Update shinyTimer widget — updateShinyTimer","title":"Update shinyTimer widget — updateShinyTimer","text":"Update shinyTimer widget","code":""},{"path":"/reference/updateShinyTimer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update shinyTimer widget — updateShinyTimer","text":"","code":"updateShinyTimer(   session,   inputId,   hours = NULL,   minutes = NULL,   seconds = NULL,   type = NULL,   label = NULL,   background = NULL )"},{"path":"/reference/updateShinyTimer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update shinyTimer widget — updateShinyTimer","text":"session session object shiny server function. inputId input ID corresponding UI element. hours new starting time hours countdown. minutes new starting time minutes countdown. seconds new starting time seconds countdown. type new type countdown timer display (\"simple\", \"mm:ss\", \"hh:mm:ss\", \"mm:ss.cs\"). label new label displayed countdown timer. background new shape timer's container (\"none\", \"circle\", \"rectangle\").","code":""}]
